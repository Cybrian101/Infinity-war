"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/match-candidates";
exports.ids = ["pages/api/match-candidates"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-candidates&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmatch-candidates.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-candidates&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmatch-candidates.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_match_candidates_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\match-candidates.js */ \"(api-node)/./pages/api/match-candidates.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_match_candidates_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_match_candidates_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_match_candidates_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_match_candidates_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/match-candidates\",\n        pathname: \"/api/match-candidates\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_match_candidates_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/match-candidates\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/match-candidates\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-candidates&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmatch-candidates.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/match-candidates.js":
/*!***************************************!*\
  !*** ./pages/api/match-candidates.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _langchain_community_document_loaders_fs_pdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/community/document_loaders/fs/pdf */ \"@langchain/community/document_loaders/fs/pdf\");\n/* harmony import */ var _langchain_community_document_loaders_fs_docx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/community/document_loaders/fs/docx */ \"@langchain/community/document_loaders/fs/docx\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_langchain_community_document_loaders_fs_pdf__WEBPACK_IMPORTED_MODULE_1__, _langchain_community_document_loaders_fs_docx__WEBPACK_IMPORTED_MODULE_2__]);\n([_langchain_community_document_loaders_fs_pdf__WEBPACK_IMPORTED_MODULE_1__, _langchain_community_document_loaders_fs_docx__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n// --- Secure, Server-Side Supabase Client ---\n// FIX: Create a new Supabase client using the SERVICE_ROLE_KEY.\n// This is essential for a backend API to bypass Row-Level Security (RLS)\n// and read all the necessary application and job data for analysis.\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://kkpyfshtddxgskiqhpvj.supabase.co\" || 0, process.env.SUPABASE_SERVICE_ROLE_KEY || '');\n// Helper to fetch and read a resume file from Supabase Storage\nasync function getResumeText(resumeUrl) {\n    try {\n        const response = await fetch(resumeUrl);\n        if (!response.ok) throw new Error(`Failed to fetch resume: ${response.statusText}`);\n        const fileBuffer = Buffer.from(await response.arrayBuffer());\n        // Create a temporary directory to safely handle the file\n        const tempDir = await fs_promises__WEBPACK_IMPORTED_MODULE_3___default().mkdtemp(path__WEBPACK_IMPORTED_MODULE_5___default().join(os__WEBPACK_IMPORTED_MODULE_4___default().tmpdir(), 'resume-'));\n        const tempFilePath = path__WEBPACK_IMPORTED_MODULE_5___default().join(tempDir, path__WEBPACK_IMPORTED_MODULE_5___default().basename(new URL(resumeUrl).pathname));\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3___default().writeFile(tempFilePath, fileBuffer);\n        let loader;\n        if (resumeUrl.toLowerCase().endsWith('.pdf')) {\n            loader = new _langchain_community_document_loaders_fs_pdf__WEBPACK_IMPORTED_MODULE_1__.PDFLoader(tempFilePath);\n        } else if (resumeUrl.toLowerCase().endsWith('.docx')) {\n            loader = new _langchain_community_document_loaders_fs_docx__WEBPACK_IMPORTED_MODULE_2__.DocxLoader(tempFilePath);\n        } else {\n            // Clean up even if the file type is unsupported\n            await fs_promises__WEBPACK_IMPORTED_MODULE_3___default().rm(tempDir, {\n                recursive: true,\n                force: true\n            });\n            throw new Error('Unsupported file type.');\n        }\n        const docs = await loader.load();\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3___default().rm(tempDir, {\n            recursive: true,\n            force: true\n        }); // Cleanup\n        return docs.map((doc)=>doc.pageContent).join('\\n\\n');\n    } catch (error) {\n        console.error(`Error processing resume from ${resumeUrl}:`, error);\n        return null; // Return null if a single resume fails, so others can still be processed\n    }\n}\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method Not Allowed'\n        });\n    }\n    const { jobId } = req.body;\n    const geminiApiKey = process.env.GEMINI_API_KEY;\n    if (!jobId || !geminiApiKey) {\n        return res.status(400).json({\n            error: 'Missing jobId or Gemini API key.'\n        });\n    }\n    try {\n        // 1. Fetch job details and applications using the secure admin client\n        const { data: job, error: jobError } = await supabaseAdmin.from('jobs').select('*').eq('id', jobId).single();\n        if (jobError) throw jobError;\n        const { data: applications, error: appError } = await supabaseAdmin.from('applications').select('*').eq('job_id', jobId);\n        if (appError) throw appError;\n        if (!applications || applications.length === 0) {\n            // This is the case that was likely being hit before the fix\n            return res.status(200).json({\n                topCandidates: []\n            });\n        }\n        // 2. Extract text from each resume\n        const resumesData = await Promise.all(applications.map(async (app)=>({\n                ...app,\n                resumeText: await getResumeText(app.resume_url)\n            })));\n        const validResumes = resumesData.filter((r)=>r.resumeText);\n        if (validResumes.length === 0) {\n            return res.status(200).json({\n                topCandidates: [],\n                message: \"No valid resumes could be processed.\"\n            });\n        }\n        // 3. Prepare the detailed prompt for Gemini\n        const prompt = `\n      You are an expert AI hiring assistant. Your task is to analyze the following resumes and rank the top 3 candidates for the position of \"${job.title}\".\n\n      JOB DESCRIPTION:\n      ---\n      ${job.description}\n      Requirements: ${job.requirements.join(', ')}\n      ---\n\n      CANDIDATE RESUMES:\n      ---\n      ${validResumes.map((r, i)=>`\n        CANDIDATE ${i + 1} (ID: ${r.candidate_id}):\n        Name: ${r.candidate_name}\n        Email: ${r.candidate_email}\n        Resume Content: ${r.resumeText}\n      `).join('\\n---\\n')}\n      ---\n\n      Based on the job description, analyze each candidate's skills, experience, and qualifications.\n      Respond with ONLY a valid JSON array of the top 3 candidates. Each object in the array should have the following keys:\n      - \"candidateId\": The ID of the candidate.\n      - \"name\": The name of the candidate.\n      - \"email\": The email of the candidate.\n      - \"matchScore\": An integer from 0 to 100 representing the candidate's match to the job.\n      - \"summary\": A brief, one-sentence summary explaining why they are a good match.\n      - \"skills\": An array of the candidate's top 5 skills relevant to the job.\n      - \"keyStrengths\": An array of 2-3 key strengths or qualifications.\n      - \"aiSuggestions\": An array of 2-3 suggested interview questions or points to discuss.\n    `;\n        // 4. Call the Gemini API\n        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${geminiApiKey}`;\n        const payload = {\n            contents: [\n                {\n                    parts: [\n                        {\n                            text: prompt\n                        }\n                    ]\n                }\n            ]\n        };\n        const apiResponse = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!apiResponse.ok) {\n            const errorBody = await apiResponse.text();\n            throw new Error(`Gemini API Error: ${errorBody}`);\n        }\n        const result = await apiResponse.json();\n        const rawText = result.candidates[0].content.parts[0].text;\n        const jsonText = rawText.replace(/```json/g, '').replace(/```/g, '').trim();\n        const topCandidates = JSON.parse(jsonText);\n        // 5. Add the resume URL back to the candidate objects for the frontend\n        const finalCandidates = topCandidates.map((tc)=>{\n            const originalApp = applications.find((app)=>app.candidate_id === tc.candidateId);\n            return {\n                ...tc,\n                resumeUrl: originalApp?.resume_url\n            };\n        });\n        res.status(200).json({\n            topCandidates: finalCandidates\n        });\n    } catch (error) {\n        console.error('Error in match-candidates API:', error);\n        res.status(500).json({\n            error: error.message || 'Failed to match candidates.'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9tYXRjaC1jYW5kaWRhdGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFEO0FBQ29CO0FBQ0U7QUFDOUM7QUFDVDtBQUNJO0FBRXhCLDhDQUE4QztBQUM5QyxnRUFBZ0U7QUFDaEUseUVBQXlFO0FBQ3pFLG9FQUFvRTtBQUNwRSxNQUFNTSxnQkFBZ0JOLG1FQUFZQSxDQUNoQ08sMENBQW9DLElBQUksQ0FBRSxFQUMxQ0EsUUFBUUMsR0FBRyxDQUFDRSx5QkFBeUIsSUFBSTtBQUczQywrREFBK0Q7QUFDL0QsZUFBZUMsY0FBY0MsU0FBUztJQUNwQyxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNRjtRQUM3QixJQUFJLENBQUNDLFNBQVNFLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sQ0FBQyx3QkFBd0IsRUFBRUgsU0FBU0ksVUFBVSxFQUFFO1FBRWxGLE1BQU1DLGFBQWFDLE9BQU9DLElBQUksQ0FBQyxNQUFNUCxTQUFTUSxXQUFXO1FBQ3pELHlEQUF5RDtRQUN6RCxNQUFNQyxVQUFVLE1BQU1uQiwwREFBVSxDQUFDRSxnREFBUyxDQUFDRCxnREFBUyxJQUFJO1FBQ3hELE1BQU1zQixlQUFlckIsZ0RBQVMsQ0FBQ2lCLFNBQVNqQixvREFBYSxDQUFDLElBQUl1QixJQUFJaEIsV0FBV2lCLFFBQVE7UUFDakYsTUFBTTFCLDREQUFZLENBQUN1QixjQUFjUjtRQUVqQyxJQUFJYTtRQUNKLElBQUluQixVQUFVb0IsV0FBVyxHQUFHQyxRQUFRLENBQUMsU0FBUztZQUM1Q0YsU0FBUyxJQUFJOUIsbUZBQVNBLENBQUN5QjtRQUN6QixPQUFPLElBQUlkLFVBQVVvQixXQUFXLEdBQUdDLFFBQVEsQ0FBQyxVQUFVO1lBQ3BERixTQUFTLElBQUk3QixxRkFBVUEsQ0FBQ3dCO1FBQzFCLE9BQU87WUFDTCxnREFBZ0Q7WUFDaEQsTUFBTXZCLHFEQUFLLENBQUNtQixTQUFTO2dCQUFFYSxXQUFXO2dCQUFN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QUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ2hESSxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVQLE9BQU9BLE1BQU0rQixPQUFPLElBQUk7UUFBOEI7SUFDL0U7QUFDRiIsInNvdXJjZXMiOlsiRDpcXEhJUkVXSVNFLUlORklOSVRZX1dBUlxcU0hBTUxcXHBhZ2VzXFxhcGlcXG1hdGNoLWNhbmRpZGF0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB7IFBERkxvYWRlciB9IGZyb20gXCJAbGFuZ2NoYWluL2NvbW11bml0eS9kb2N1bWVudF9sb2FkZXJzL2ZzL3BkZlwiO1xuaW1wb3J0IHsgRG9jeExvYWRlciB9IGZyb20gXCJAbGFuZ2NoYWluL2NvbW11bml0eS9kb2N1bWVudF9sb2FkZXJzL2ZzL2RvY3hcIjtcbmltcG9ydCBmcyBmcm9tICdmcy9wcm9taXNlcyc7XG5pbXBvcnQgb3MgZnJvbSAnb3MnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbi8vIC0tLSBTZWN1cmUsIFNlcnZlci1TaWRlIFN1cGFiYXNlIENsaWVudCAtLS1cbi8vIEZJWDogQ3JlYXRlIGEgbmV3IFN1cGFiYXNlIGNsaWVudCB1c2luZyB0aGUgU0VSVklDRV9ST0xFX0tFWS5cbi8vIFRoaXMgaXMgZXNzZW50aWFsIGZvciBhIGJhY2tlbmQgQVBJIHRvIGJ5cGFzcyBSb3ctTGV2ZWwgU2VjdXJpdHkgKFJMUylcbi8vIGFuZCByZWFkIGFsbCB0aGUgbmVjZXNzYXJ5IGFwcGxpY2F0aW9uIGFuZCBqb2IgZGF0YSBmb3IgYW5hbHlzaXMuXG5jb25zdCBzdXBhYmFzZUFkbWluID0gY3JlYXRlQ2xpZW50KFxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgJycsXG4gIHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkgfHwgJydcbik7XG5cbi8vIEhlbHBlciB0byBmZXRjaCBhbmQgcmVhZCBhIHJlc3VtZSBmaWxlIGZyb20gU3VwYWJhc2UgU3RvcmFnZVxuYXN5bmMgZnVuY3Rpb24gZ2V0UmVzdW1lVGV4dChyZXN1bWVVcmwpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHJlc3VtZVVybCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggcmVzdW1lOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgXG4gICAgY29uc3QgZmlsZUJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGF3YWl0IHJlc3BvbnNlLmFycmF5QnVmZmVyKCkpO1xuICAgIC8vIENyZWF0ZSBhIHRlbXBvcmFyeSBkaXJlY3RvcnkgdG8gc2FmZWx5IGhhbmRsZSB0aGUgZmlsZVxuICAgIGNvbnN0IHRlbXBEaXIgPSBhd2FpdCBmcy5ta2R0ZW1wKHBhdGguam9pbihvcy50bXBkaXIoKSwgJ3Jlc3VtZS0nKSk7XG4gICAgY29uc3QgdGVtcEZpbGVQYXRoID0gcGF0aC5qb2luKHRlbXBEaXIsIHBhdGguYmFzZW5hbWUobmV3IFVSTChyZXN1bWVVcmwpLnBhdGhuYW1lKSk7XG4gICAgYXdhaXQgZnMud3JpdGVGaWxlKHRlbXBGaWxlUGF0aCwgZmlsZUJ1ZmZlcik7XG5cbiAgICBsZXQgbG9hZGVyO1xuICAgIGlmIChyZXN1bWVVcmwudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnLnBkZicpKSB7XG4gICAgICBsb2FkZXIgPSBuZXcgUERGTG9hZGVyKHRlbXBGaWxlUGF0aCk7XG4gICAgfSBlbHNlIGlmIChyZXN1bWVVcmwudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnLmRvY3gnKSkge1xuICAgICAgbG9hZGVyID0gbmV3IERvY3hMb2FkZXIodGVtcEZpbGVQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ2xlYW4gdXAgZXZlbiBpZiB0aGUgZmlsZSB0eXBlIGlzIHVuc3VwcG9ydGVkXG4gICAgICBhd2FpdCBmcy5ybSh0ZW1wRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSwgZm9yY2U6IHRydWUgfSk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vuc3VwcG9ydGVkIGZpbGUgdHlwZS4nKTtcbiAgICB9XG5cbiAgICBjb25zdCBkb2NzID0gYXdhaXQgbG9hZGVyLmxvYWQoKTtcbiAgICBhd2FpdCBmcy5ybSh0ZW1wRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSwgZm9yY2U6IHRydWUgfSk7IC8vIENsZWFudXBcbiAgICByZXR1cm4gZG9jcy5tYXAoZG9jID0+IGRvYy5wYWdlQ29udGVudCkuam9pbignXFxuXFxuJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihgRXJyb3IgcHJvY2Vzc2luZyByZXN1bWUgZnJvbSAke3Jlc3VtZVVybH06YCwgZXJyb3IpO1xuICAgIHJldHVybiBudWxsOyAvLyBSZXR1cm4gbnVsbCBpZiBhIHNpbmdsZSByZXN1bWUgZmFpbHMsIHNvIG90aGVycyBjYW4gc3RpbGwgYmUgcHJvY2Vzc2VkXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2QgTm90IEFsbG93ZWQnIH0pO1xuICB9XG5cbiAgY29uc3QgeyBqb2JJZCB9ID0gcmVxLmJvZHk7XG4gIGNvbnN0IGdlbWluaUFwaUtleSA9IHByb2Nlc3MuZW52LkdFTUlOSV9BUElfS0VZO1xuXG4gIGlmICgham9iSWQgfHwgIWdlbWluaUFwaUtleSkge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTWlzc2luZyBqb2JJZCBvciBHZW1pbmkgQVBJIGtleS4nIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICAvLyAxLiBGZXRjaCBqb2IgZGV0YWlscyBhbmQgYXBwbGljYXRpb25zIHVzaW5nIHRoZSBzZWN1cmUgYWRtaW4gY2xpZW50XG4gICAgY29uc3QgeyBkYXRhOiBqb2IsIGVycm9yOiBqb2JFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pbi5mcm9tKCdqb2JzJykuc2VsZWN0KCcqJykuZXEoJ2lkJywgam9iSWQpLnNpbmdsZSgpO1xuICAgIGlmIChqb2JFcnJvcikgdGhyb3cgam9iRXJyb3I7XG5cbiAgICBjb25zdCB7IGRhdGE6IGFwcGxpY2F0aW9ucywgZXJyb3I6IGFwcEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluLmZyb20oJ2FwcGxpY2F0aW9ucycpLnNlbGVjdCgnKicpLmVxKCdqb2JfaWQnLCBqb2JJZCk7XG4gICAgaWYgKGFwcEVycm9yKSB0aHJvdyBhcHBFcnJvcjtcblxuICAgIGlmICghYXBwbGljYXRpb25zIHx8IGFwcGxpY2F0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIFRoaXMgaXMgdGhlIGNhc2UgdGhhdCB3YXMgbGlrZWx5IGJlaW5nIGhpdCBiZWZvcmUgdGhlIGZpeFxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdG9wQ2FuZGlkYXRlczogW10gfSk7XG4gICAgfVxuXG4gICAgLy8gMi4gRXh0cmFjdCB0ZXh0IGZyb20gZWFjaCByZXN1bWVcbiAgICBjb25zdCByZXN1bWVzRGF0YSA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgYXBwbGljYXRpb25zLm1hcChhc3luYyAoYXBwKSA9PiAoe1xuICAgICAgICAuLi5hcHAsXG4gICAgICAgIHJlc3VtZVRleHQ6IGF3YWl0IGdldFJlc3VtZVRleHQoYXBwLnJlc3VtZV91cmwpLFxuICAgICAgfSkpXG4gICAgKTtcbiAgICBcbiAgICBjb25zdCB2YWxpZFJlc3VtZXMgPSByZXN1bWVzRGF0YS5maWx0ZXIociA9PiByLnJlc3VtZVRleHQpO1xuXG4gICAgaWYgKHZhbGlkUmVzdW1lcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdG9wQ2FuZGlkYXRlczogW10sIG1lc3NhZ2U6IFwiTm8gdmFsaWQgcmVzdW1lcyBjb3VsZCBiZSBwcm9jZXNzZWQuXCIgfSk7XG4gICAgfVxuXG4gICAgLy8gMy4gUHJlcGFyZSB0aGUgZGV0YWlsZWQgcHJvbXB0IGZvciBHZW1pbmlcbiAgICBjb25zdCBwcm9tcHQgPSBgXG4gICAgICBZb3UgYXJlIGFuIGV4cGVydCBBSSBoaXJpbmcgYXNzaXN0YW50LiBZb3VyIHRhc2sgaXMgdG8gYW5hbHl6ZSB0aGUgZm9sbG93aW5nIHJlc3VtZXMgYW5kIHJhbmsgdGhlIHRvcCAzIGNhbmRpZGF0ZXMgZm9yIHRoZSBwb3NpdGlvbiBvZiBcIiR7am9iLnRpdGxlfVwiLlxuXG4gICAgICBKT0IgREVTQ1JJUFRJT046XG4gICAgICAtLS1cbiAgICAgICR7am9iLmRlc2NyaXB0aW9ufVxuICAgICAgUmVxdWlyZW1lbnRzOiAke2pvYi5yZXF1aXJlbWVudHMuam9pbignLCAnKX1cbiAgICAgIC0tLVxuXG4gICAgICBDQU5ESURBVEUgUkVTVU1FUzpcbiAgICAgIC0tLVxuICAgICAgJHt2YWxpZFJlc3VtZXMubWFwKChyLCBpKSA9PiBgXG4gICAgICAgIENBTkRJREFURSAke2kgKyAxfSAoSUQ6ICR7ci5jYW5kaWRhdGVfaWR9KTpcbiAgICAgICAgTmFtZTogJHtyLmNhbmRpZGF0ZV9uYW1lfVxuICAgICAgICBFbWFpbDogJHtyLmNhbmRpZGF0ZV9lbWFpbH1cbiAgICAgICAgUmVzdW1lIENvbnRlbnQ6ICR7ci5yZXN1bWVUZXh0fVxuICAgICAgYCkuam9pbignXFxuLS0tXFxuJyl9XG4gICAgICAtLS1cblxuICAgICAgQmFzZWQgb24gdGhlIGpvYiBkZXNjcmlwdGlvbiwgYW5hbHl6ZSBlYWNoIGNhbmRpZGF0ZSdzIHNraWxscywgZXhwZXJpZW5jZSwgYW5kIHF1YWxpZmljYXRpb25zLlxuICAgICAgUmVzcG9uZCB3aXRoIE9OTFkgYSB2YWxpZCBKU09OIGFycmF5IG9mIHRoZSB0b3AgMyBjYW5kaWRhdGVzLiBFYWNoIG9iamVjdCBpbiB0aGUgYXJyYXkgc2hvdWxkIGhhdmUgdGhlIGZvbGxvd2luZyBrZXlzOlxuICAgICAgLSBcImNhbmRpZGF0ZUlkXCI6IFRoZSBJRCBvZiB0aGUgY2FuZGlkYXRlLlxuICAgICAgLSBcIm5hbWVcIjogVGhlIG5hbWUgb2YgdGhlIGNhbmRpZGF0ZS5cbiAgICAgIC0gXCJlbWFpbFwiOiBUaGUgZW1haWwgb2YgdGhlIGNhbmRpZGF0ZS5cbiAgICAgIC0gXCJtYXRjaFNjb3JlXCI6IEFuIGludGVnZXIgZnJvbSAwIHRvIDEwMCByZXByZXNlbnRpbmcgdGhlIGNhbmRpZGF0ZSdzIG1hdGNoIHRvIHRoZSBqb2IuXG4gICAgICAtIFwic3VtbWFyeVwiOiBBIGJyaWVmLCBvbmUtc2VudGVuY2Ugc3VtbWFyeSBleHBsYWluaW5nIHdoeSB0aGV5IGFyZSBhIGdvb2QgbWF0Y2guXG4gICAgICAtIFwic2tpbGxzXCI6IEFuIGFycmF5IG9mIHRoZSBjYW5kaWRhdGUncyB0b3AgNSBza2lsbHMgcmVsZXZhbnQgdG8gdGhlIGpvYi5cbiAgICAgIC0gXCJrZXlTdHJlbmd0aHNcIjogQW4gYXJyYXkgb2YgMi0zIGtleSBzdHJlbmd0aHMgb3IgcXVhbGlmaWNhdGlvbnMuXG4gICAgICAtIFwiYWlTdWdnZXN0aW9uc1wiOiBBbiBhcnJheSBvZiAyLTMgc3VnZ2VzdGVkIGludGVydmlldyBxdWVzdGlvbnMgb3IgcG9pbnRzIHRvIGRpc2N1c3MuXG4gICAgYDtcblxuICAgIC8vIDQuIENhbGwgdGhlIEdlbWluaSBBUElcbiAgICBjb25zdCBhcGlVcmwgPSBgaHR0cHM6Ly9nZW5lcmF0aXZlbGFuZ3VhZ2UuZ29vZ2xlYXBpcy5jb20vdjFiZXRhL21vZGVscy9nZW1pbmktMS41LWZsYXNoLWxhdGVzdDpnZW5lcmF0ZUNvbnRlbnQ/a2V5PSR7Z2VtaW5pQXBpS2V5fWA7XG4gICAgY29uc3QgcGF5bG9hZCA9IHsgY29udGVudHM6IFt7IHBhcnRzOiBbeyB0ZXh0OiBwcm9tcHQgfV0gfV0gfTtcblxuICAgIGNvbnN0IGFwaVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXG4gICAgfSk7XG5cbiAgICBpZiAoIWFwaVJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zdCBlcnJvckJvZHkgPSBhd2FpdCBhcGlSZXNwb25zZS50ZXh0KCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEdlbWluaSBBUEkgRXJyb3I6ICR7ZXJyb3JCb2R5fWApO1xuICAgIH1cblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFwaVJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zdCByYXdUZXh0ID0gcmVzdWx0LmNhbmRpZGF0ZXNbMF0uY29udGVudC5wYXJ0c1swXS50ZXh0O1xuICAgIGNvbnN0IGpzb25UZXh0ID0gcmF3VGV4dC5yZXBsYWNlKC9gYGBqc29uL2csICcnKS5yZXBsYWNlKC9gYGAvZywgJycpLnRyaW0oKTtcbiAgICBjb25zdCB0b3BDYW5kaWRhdGVzID0gSlNPTi5wYXJzZShqc29uVGV4dCk7XG5cbiAgICAvLyA1LiBBZGQgdGhlIHJlc3VtZSBVUkwgYmFjayB0byB0aGUgY2FuZGlkYXRlIG9iamVjdHMgZm9yIHRoZSBmcm9udGVuZFxuICAgIGNvbnN0IGZpbmFsQ2FuZGlkYXRlcyA9IHRvcENhbmRpZGF0ZXMubWFwKHRjID0+IHtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxBcHAgPSBhcHBsaWNhdGlvbnMuZmluZChhcHAgPT4gYXBwLmNhbmRpZGF0ZV9pZCA9PT0gdGMuY2FuZGlkYXRlSWQpO1xuICAgICAgICByZXR1cm4geyAuLi50YywgcmVzdW1lVXJsOiBvcmlnaW5hbEFwcD8ucmVzdW1lX3VybCB9O1xuICAgIH0pO1xuXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyB0b3BDYW5kaWRhdGVzOiBmaW5hbENhbmRpZGF0ZXMgfSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBtYXRjaC1jYW5kaWRhdGVzIEFQSTonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnRmFpbGVkIHRvIG1hdGNoIGNhbmRpZGF0ZXMuJyB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsIlBERkxvYWRlciIsIkRvY3hMb2FkZXIiLCJmcyIsIm9zIiwicGF0aCIsInN1cGFiYXNlQWRtaW4iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSIsImdldFJlc3VtZVRleHQiLCJyZXN1bWVVcmwiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsInN0YXR1c1RleHQiLCJmaWxlQnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsImFycmF5QnVmZmVyIiwidGVtcERpciIsIm1rZHRlbXAiLCJqb2luIiwidG1wZGlyIiwidGVtcEZpbGVQYXRoIiwiYmFzZW5hbWUiLCJVUkwiLCJwYXRobmFtZSIsIndyaXRlRmlsZSIsImxvYWRlciIsInRvTG93ZXJDYXNlIiwiZW5kc1dpdGgiLCJybSIsInJlY3Vyc2l2ZSIsImZvcmNlIiwiZG9jcyIsImxvYWQiLCJtYXAiLCJkb2MiLCJwYWdlQ29udGVudCIsImVycm9yIiwiY29uc29sZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiam9iSWQiLCJib2R5IiwiZ2VtaW5pQXBpS2V5IiwiR0VNSU5JX0FQSV9LRVkiLCJkYXRhIiwiam9iIiwiam9iRXJyb3IiLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsImFwcGxpY2F0aW9ucyIsImFwcEVycm9yIiwibGVuZ3RoIiwidG9wQ2FuZGlkYXRlcyIsInJlc3VtZXNEYXRhIiwiUHJvbWlzZSIsImFsbCIsImFwcCIsInJlc3VtZVRleHQiLCJyZXN1bWVfdXJsIiwidmFsaWRSZXN1bWVzIiwiZmlsdGVyIiwiciIsIm1lc3NhZ2UiLCJwcm9tcHQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwicmVxdWlyZW1lbnRzIiwiaSIsImNhbmRpZGF0ZV9pZCIsImNhbmRpZGF0ZV9uYW1lIiwiY2FuZGlkYXRlX2VtYWlsIiwiYXBpVXJsIiwicGF5bG9hZCIsImNvbnRlbnRzIiwicGFydHMiLCJ0ZXh0IiwiYXBpUmVzcG9uc2UiLCJoZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSIsImVycm9yQm9keSIsInJlc3VsdCIsInJhd1RleHQiLCJjYW5kaWRhdGVzIiwiY29udGVudCIsImpzb25UZXh0IiwicmVwbGFjZSIsInRyaW0iLCJwYXJzZSIsImZpbmFsQ2FuZGlkYXRlcyIsInRjIiwib3JpZ2luYWxBcHAiLCJmaW5kIiwiY2FuZGlkYXRlSWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/match-candidates.js\n");

/***/ }),

/***/ "@langchain/community/document_loaders/fs/docx":
/*!****************************************************************!*\
  !*** external "@langchain/community/document_loaders/fs/docx" ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = import("@langchain/community/document_loaders/fs/docx");;

/***/ }),

/***/ "@langchain/community/document_loaders/fs/pdf":
/*!***************************************************************!*\
  !*** external "@langchain/community/document_loaders/fs/pdf" ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = import("@langchain/community/document_loaders/fs/pdf");;

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmatch-candidates&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmatch-candidates.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();